//noinspection SpellCheckingInspectionForFile
{
    parserClass="com.dvd.intellij.d2.lang.D2Parser"

    implements="com.dvd.intellij.d2.lang.D2CompositeElement"
    extends="com.dvd.intellij.d2.lang.D2CompositeElementImpl"

    elementTypeHolderClass="com.dvd.intellij.d2.lang.D2ElementTypes"
    elementTypeClass="com.dvd.intellij.d2.lang.D2ElementType"
    tokenTypeClass="com.dvd.intellij.d2.lang.D2TokenType"
    psiTreeUtilClass="com.dvd.intellij.d2.lang.D2PsiTreeUtil"

    psiClassPrefix="D2"
    psiImplClassSuffix="Impl"
    psiPackage="com.dvd.intellij.d2.lang.psi"
    psiImplPackage="com.dvd.intellij.d2.lang.psi.impl"
}

File ::= !<<eof>> (ShapeDefinitions | COMMENT)*

// bad tree structure: ci.deploys->clouds<-a.sub:test
ShapeDefinitions ::= ShapeDefinition (ShapeConnection | SubShapeDefinition | InlineShapeDefinition)* ShapeExtras? {
  pin=1
}

left SubShapeDefinition ::= DOT ShapeDefinition ShapeExtras?

private ShapeExtras ::= COLON (LabelDefinition BlockDefinition? | BlockDefinition) {
  pin=1
}

ShapeDefinition ::= AttributeValue

LabelDefinition ::= AttributeValue

left ShapeConnection ::= (Connector ShapeDefinition)+

Connector ::= ARROW | REVERSE_ARROW | DOUBLE_ARROW | DOUBLE_HYPHEN_ARROW

left InlineShapeDefinition ::= (SEMICOLON ShapeDefinition)+

Property ::= SIMPLE_RESERVED_KEYWORDS COLON AttributeValue

BlockDefinition ::= LBRACE (Property | ShapeDefinitions)* RBRACE {
  pin=1
}

AttributeValue ::= STRING_LITERAL | IDENTIFIER | NUMERIC_LITERAL | FLOAT_LITERAL | TRUE | FALSE | DOT