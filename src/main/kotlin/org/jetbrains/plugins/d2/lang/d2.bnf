//noinspection SpellCheckingInspectionForFile
{
		parserClass="org.jetbrains.plugins.d2.lang.D2Parser"

		implements="org.jetbrains.plugins.d2.lang.D2CompositeElement"
		extends="org.jetbrains.plugins.d2.lang.D2CompositeElementImpl"

		elementTypeHolderClass="org.jetbrains.plugins.d2.lang.D2ElementTypes"
		elementTypeClass="org.jetbrains.plugins.d2.lang.D2ElementType"
		elementTypeFactory="org.jetbrains.plugins.d2.lang.D2ElementTypeFactory.element"

		tokenTypeClass="com.intellij.psi.tree.IElementType"
		tokenTypeFactory="org.jetbrains.plugins.d2.lang.D2ElementTypeFactory.token"

		psiTreeUtilClass="org.jetbrains.plugins.d2.lang.D2PsiTreeUtil"

		psiClassPrefix="D2"
		psiImplClassSuffix="Impl"
		psiPackage="org.jetbrains.plugins.d2.lang.psi"
		psiImplPackage="org.jetbrains.plugins.d2.lang.psi.impl"
}

File ::= !<<eof>> (Property | ShapeDefinitions | COMMENT)*

// bad tree structure: ci.deploys->clouds<-a.sub:test
private ShapeDefinitions ::= ShapeDefinition (ShapeConnection | SubShapeDefinition | InlineShapeDefinition)* ShapeExtras? {
  pin=1
}

left private SubShapeDefinition ::= DOT ShapeDefinition ShapeExtras?

private ShapeExtras ::= COLON ((LabelDefinition | BlockString) BlockDefinition? | BlockDefinition) {
  pin=1
}

// `foo bar -> shape2` - here `foo bar` is shape id
ShapeDefinition ::= (STRING | ID | INT | FLOAT | TRUE | FALSE)+

LabelDefinition ::= UNQUOTED_STRING | AttributeValue

left ShapeConnection ::= (Connector ShapeDefinition)+

Connector ::= ARROW | REVERSE_ARROW | DOUBLE_ARROW | DOUBLE_HYPHEN_ARROW

left InlineShapeDefinition ::= (SEMICOLON ShapeDefinition)+

BlockString ::= BLOCK_STRING_OPEN BLOCK_STRING_LANG? BLOCK_STRING_BODY BLOCK_STRING_CLOSE

PropertyKey ::= (SIMPLE_RESERVED_KEYWORDS | RESERVED_KEYWORD_HOLDERS) (DOT ID)*
PropertyValue ::= UNQUOTED_STRING | AttributeValue | BlockString

// logs.style.strokes: "#f4a261"
Property ::= (AttributeValue (DOT AttributeValue)*)? PropertyKey COLON PropertyValue

BlockDefinition ::= LBRACE (Property | ShapeDefinitions)* RBRACE {
  pin=1
}

private AttributeValue ::= STRING | ID | INT | FLOAT | TRUE | FALSE | DOT